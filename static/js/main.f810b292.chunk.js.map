{"version":3,"sources":["actions.js","action-item-manager-redux.js","App.js","serviceWorker.js","index.js"],"names":["C","items","state","action","index","findIndex","e","id","type","max","forEach","i","a","newId","newItem","description","done","isNew","splice","item","slice","length","map","justMoved","deleteItem","makeTop","moveDown","importItems","SAMPLE_ITEMS","ActionItemManagerRedux","props","store","subscribe","forceUpdate","this","React","Component","ActionItemLayout","newItemRef","createRef","Container","Row","className","Col","xs","sm","Button","onClick","blob","Blob","JSON","stringify","getState","saveAs","dispatch","Form","FormGroup","Control","onChange","files","target","file","reader","FileReader","readAsText","onloadend","data","parse","result","console","log","onSubmit","preventDefault","current","value","setTimeout","Group","name","ref","ActionItemList","key","toString","idx","clickActionButton","ActionItem","text","disabled","Check","checked","changeDone","label","md","ActionButton","size","variant","App","localStorage","createStore","combineReducers","getItem","setItem","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f810b292.chunk.js","sourcesContent":["// action types\n\n//export const C = {\nconst C = {\n  ADD_ITEM: 'ADD_ITEM',\n  MAKE_TOP: 'MAKE_TOP',\n  MOVE_UP: ' MOVE_UP',\n  MOVE_DOWN: 'MOVE_DOWN',\n  CHANGE_DONE: 'CHANGE_DONE',\n  DELETE_ITEM: 'DELETE_ITEM',\n  IMPORT_ITEMS: 'IMPORT_ITEMS',\n  CLEAR_MOVE: 'CLEAR_MOVE',\n  CLEAR_NEW: 'CLEAR_NEW',\n};\n\n// reducers (state + action = new state)\n\n// state refers to items[]\nexport const items = (state = [], action) => {\n  let index = state.findIndex((e) => (e.id === action.id));\n\n  switch (action.type) {\n\n    case C.ADD_ITEM:\n      let max = 0;\n      state.forEach((e, i, a) => {if (e.id > max) { max = e.id; }});\n      let newId = max + 1;\n\n      let newItem = {\n        description: action.description,\n        done: action.done,\n        isNew: true,\n        id: newId,\n      };\n\n      return [\n        newItem,\n        ...state\n      ];\n\n    case C.DELETE_ITEM:\n      state.splice(index, 1);\n      return state;\n\n    case C.MAKE_TOP:\n\n      return [\n        item(state[index], action),\n        ...state.slice(0, index), \n        ...state.slice(index + 1)\n      ];\n\n    case C.MOVE_UP:\n      return [\n        ...state.slice(0, index - 1), \n        item(state[index], action),\n        state[index - 1], \n        ...state.slice(index + 1)\n      ];\n    \n    case C.MOVE_DOWN:\n      if (index >= state.length - 1) {\n        return state;\n      }\n\n      return [\n        ...state.slice(0, index), \n        state[index + 1], \n        item(state[index], action),\n        ...state.slice(index + 2)\n      ];\n\n    case C.CHANGE_DONE:\n      // set the item as done\n      state[index] = item(state[index], action);\n\n      // move it to the bottom\n      if (action.done) {\n        state = [\n          ...state.slice(0, index), \n          ...state.slice(index + 1, state.length), \n          state[index], \n        ];\n      }\n      return state;\n\n    case C.CLEAR_MOVE:\n      state[index] = item(state[index], action);\n      return state;\n\n    case C.CLEAR_NEW:\n      return state.map((e) => item(e, action));\n\n    case C.IMPORT_ITEMS:\n      return action.items;\n\n    default:\n      return state;\n  }\n}\n\n// called by items(), above, for a single item.\n// state refers to item: {description, done, etc.}\nexport const item = (state = {}, action) => {\n  switch (action.type) {\n\n    case C.CHANGE_DONE:\n      return {\n        ...state,\n        justMoved: true,\n        done: action.done,\n      };\n\n    case C.MOVE_UP:\n    case C.MOVE_DOWN:\n    case C.MAKE_TOP:\n        return {\n        ...state,\n        justMoved: true,\n      };\n\n    case C.CLEAR_MOVE:\n      return {\n        ...state,\n        justMoved: false,\n        isNew: false,\n      };\n\n    case C.CLEAR_NEW:\n      return {\n        ...state,\n        isNew: false,\n      };\n\n    default:\n      return state;\n  }\n}\n\n// action creators\n\nexport const addItem = (description) => (\n  {\n    type: C.ADD_ITEM,\n    description,\n    done: false,\n  }\n)\n\nexport const deleteItem = (id) => (\n  {\n    type: C.DELETE_ITEM,\n    id,\n  }\n)\n\nexport const changeDone = (id, done) => (\n  {\n    type: C.CHANGE_DONE,\n    id,\n    done,\n  }\n)\n\nexport const makeTop = (id) => (\n  {\n    type: C.MAKE_TOP,\n    id,\n  }\n)\n\nexport const moveUp = (id) => (\n  {\n    type: C.MOVE_UP,\n    id,\n  }\n)\n\nexport const moveDown = (id) => (\n  {\n    type: C.MOVE_DOWN,\n    id,\n  }\n)\n\nexport const importItems = (items) => (\n  {\n    type: C.IMPORT_ITEMS,\n    items,\n  }\n)\n\nexport const clearMove = (id) => (\n  {\n    type: C.CLEAR_MOVE,\n    id,\n  }\n)\n\nexport const clearNew = () => (\n  {\n    type: C.CLEAR_NEW,\n  }\n)\n\n","import React from 'react';\nimport { saveAs } from 'file-saver';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { changeDone, deleteItem, addItem, makeTop, importItems, moveUp, moveDown, clearMove, clearNew } from './actions';\nimport FormGroup from 'react-bootstrap/FormGroup';\n\nconst EXPORT_JSON_NAME = \"action-item-manager-state.json\";\n\nconst SAMPLE_ITEMS = [\n  {\"description\": \"use separate columns for table and id\", \"done\": false, id: 3},\n  {\"description\": \"eventually delete all history and comments columns\", \"done\": false, id: 33},\n  {\"description\": \"AFI reports for Leif\", \"done\": false, id: 44},\n  {\"description\": \"add field for ticket number, link to ticket page\", \"done\": false, id: 45},\n  {\"description\": \"add field for reported issue - see XLS for drop down options, ability to add new option\", \"done\": false, id: 47},\n  {\"description\": \"button to create UPS return label\", \"done\": false, id: 23},\n  {\"description\": \"button to create UPS shipment\", \"done\": false, id: 22},\n];\n\nexport default class ActionItemManagerRedux extends React.Component {\n  constructor(props) {\n    super(props);\n\n    props.store.subscribe(() => this.forceUpdate());\n  }\n\n  render() {\n    return (\n      <ActionItemLayout store={this.props.store} />\n    );\n  }\n}\n\nconst ActionItemLayout = ({store}) => {\n  const clickExport = () => {\n    var blob = new Blob(\n      [JSON.stringify({items: store.getState().items})], \n      {type: \"text/plain;charset=utf-8\"}\n    );\n    saveAs(blob, EXPORT_JSON_NAME);\n  }\n\n  const loadSampleData = () => {\n    store.dispatch(importItems([...SAMPLE_ITEMS]));\n  }\n\n  // import JSON\n  const changeChooseFile = (e) => {\n    let files = e.target.files;\n    if (files.length > 0) {\n      let file = files[0];\n      if (typeof file !== 'undefined') {\n        let reader = new FileReader();\n        reader.readAsText(file);\n        reader.onloadend = function () {\n          let data = JSON.parse(reader.result);\n          if (typeof data.items !== 'undefined') {\n            let items = data.items;\n            console.log(items);\n            store.dispatch(importItems(items));\n          }\n        };\n      }\n    }\n  }\n\n  const submitAddItem = (e) => {\n    e.preventDefault();\n    store.dispatch(addItem(newItemRef.current.value));\n    setTimeout(() => {store.dispatch(clearNew())}, 1000);\n    newItemRef.current.value = '';\n  }\n\n  let newItemRef = React.createRef();\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col xs=\"auto\">\n          <h1 className=\"text-center\">\n            TODO List\n          </h1>\n        </Col>\n      </Row>\n      <Row className=\"d-print-none justify-content-start\">\n        <Col sm={2}>\n          <Button onClick={clickExport} className=\"mb-3\">\n            Export JSON\n          </Button>\n        </Col>\n        <Col sm={2}>\n          <Button onClick={loadSampleData} className=\"mb-3\">\n            Load Sample Data\n          </Button>\n        </Col>\n        <Col>\n          <Form className=\"\">\n            <Form.Row>\n              <FormGroup>\n                <Col>\n                  Import JSON:\n                </Col>\n                <Col>\n                  <Form.Control type=\"file\" className=\"mb-3\" onChange={changeChooseFile} />\n                </Col>\n              </FormGroup>\n            </Form.Row>\n          </Form>\n        </Col>\n      </Row>\n      <Form onSubmit={submitAddItem} className=\"\">\n        <Form.Row className=\"d-print-none\">\n          <Col xs={10}>\n            <Form.Group>\n              <Form.Control name=\"newItem\" ref={newItemRef} />\n            </Form.Group>\n          </Col>\n          <Col xs={2}>\n            <Button type=\"submit\" >\n              Add Item\n            </Button>\n          </Col>\n        </Form.Row>\n        <ActionItemList store={store} />\n      </Form>\n    </Container>\n  );\n}\n\nconst ActionItemList = ({store}) => (\n  <>\n    {store.getState().items ?\n      store.getState().items.map((e, i, a) => (\n        <ActionItem key={i.toString()} store={store} item={e} idx={i} />\n      ))\n    :\n      \"No Items\"\n    }\n  </>\n);\n\nconst clickActionButton = (store, action, item) => {\n  store.dispatch(action);\n  setTimeout(() => {store.dispatch(clearMove(item.id))}, 1000);\n}\n\nconst ActionItem = ({store, item, idx}) => (\n  <Form.Row className={\"actionItemRow \" + (item.done ? \"done \" : \"\") + (item.isNew ? \"new \" : \"\") + (item.justMoved ? \"justMoved \" : \"\")} >\n    <ActionButton store={store} item={item} text=\"Up\" action={moveUp(item.id)} disabled={item.done || idx < 1} />\n    <ActionButton store={store} item={item} text=\"Down\" action={moveDown(item.id)} disabled={item.done} />\n    <ActionButton store={store} item={item} text=\"Top\" action={makeTop(item.id)} disabled={item.done || idx < 1} />\n    <ActionButton store={store} item={item} text=\"Delete\" action={deleteItem(item.id)} disabled={!item.done} />\n    <Col xs=\"auto\" className=\"d-print-none\">\n      <Form.Group className=\"done\">\n        <Form.Check type=\"checkbox\" checked={item.done} id={\"done_\" + idx} onChange={(e) => clickActionButton(store, changeDone(item.id, e.target.checked), item)} label=\"Done\" />\n      </Form.Group>\n    </Col>\n    <Col xs={7} md={7} className=\"d-print-none description\">\n      {item.description}\n    </Col>\n    <Col xs={true} className=\"d-none d-print-block description\">\n      {item.description}\n    </Col>\n  </Form.Row>\n);\n\nconst ActionButton = ({store, item, text, action, disabled}) => (\n  <Col xs=\"auto\" className=\"d-print-none\">\n    <Button size=\"sm\" variant=\"success\" onClick={() => clickActionButton(store, action, item)} disabled={disabled}>\n     {text}\n    </Button>\n  </Col>\n);\n\n","import React from 'react';\nimport { createStore, combineReducers } from 'redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { items } from './actions';\n//import sampleState from './sampleStateMPB.json';\nimport ActionItemManagerRedux from './action-item-manager-redux';\n\nconst STORAGE_KEY = 'action-item-manager-state';\n\nfunction App() {\n  console.log(localStorage);\n\n  const store = createStore(\n    combineReducers({items}),\n      JSON.parse(localStorage.getItem(STORAGE_KEY)) || \n      {items:[]}\n  );\n\n  store.subscribe(() => {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(store.getState()));\n  });\n\n  return (\n    <ActionItemManagerRedux store={store} />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}